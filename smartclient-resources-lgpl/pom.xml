<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.srg.smartclient-dsi</groupId>
		<artifactId>smartclient-parent</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<artifactId>smartclient-resources-lgpl</artifactId>
	<properties>
		<!--
			SmartClient release date override- just  uncomment variable above, this can be used to stick
			with a corespondent release date/version.

			On the one hand - it is hard to predict a date of the next patched release, and, moreover, Isomorphic team treats
			the patched distros as a nightly builds and removes a stale ones, - it is really hard to automate
			distro download.

			On the other hand - size of the source is bigger than allowed by GitHub, therefore distro can not be uploaded to GH.
		  -->
		<SMART_CLIENT_RELEASE_DATE>2020-08-16</SMART_CLIENT_RELEASE_DATE>
		<smartclient-lgpl.version>SmartClient_v121p_${SMART_CLIENT_RELEASE_DATE}_LGPL</smartclient-lgpl.version>
<!--		<smartclient-lgpl.version>SmartClient_SNAPSHOT_v130d_2020-08-06_LGPL</smartclient-lgpl.version>-->
	</properties>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<configuration>
							<exportAntProperties>true</exportAntProperties>
							<target>
								<tstamp>
									<format property="SMART_CLIENT_RELEASE_DATE" pattern="yyyy-MM-dd" offset="-1"/>
								</tstamp>

								<echo message="downloading smartclient lgpl ${smartclient-lgpl.version}.zip" />

								<!--								<get src="https://www.smartclient.com/builds/SmartClient/13.0d/LGPL/latest/${smartclient-lgpl.version}.zip"-->
								<get src="https://www.smartclient.com/builds/SmartClient/12.1p/LGPL/latest/${smartclient-lgpl.version}.zip"
								dest="${project.build.directory}"
								skipexisting="true"
								verbose="false"
								usetimestamp="true"/>

								<echo message="unpacking file ${smartclient-lgpl.version}.zip" />
								<unzip src="${project.build.directory}/${smartclient-lgpl.version}.zip" dest="${project.build.directory}/generated-resources" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>add-resource</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>add-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>${project.build.directory}/generated-resources/${smartclient-lgpl.version}/smartclientRuntime/isomorphic</directory>
									<targetPath>${project.build.outputDirectory}/assets/isomorphic</targetPath>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<archive>
						<manifestEntries>
							<SmartClient-Version>${smartclient-lgpl.version}</SmartClient-Version>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<configuration>
					<skipSource>true</skipSource>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
